/**
 * The purpose of this class is to store all the records.
 * <p>
 * @author David Yeghshatan 
 * @version Version 1 May 13
 * <p>
 * @param title The string that holds the book title.
 * @param author The string that holds the author's name.
 * @param genre The string that holds the genre.
 * @param location The string that holds the location of the book.
 * @param borrowDate Stores the date the book was borrowed if it is borrowed.
 * @param returnDate Stores the date the book will be returned if it is borrowed.
 * @param recNum Keeps track of the number of records.
 */

public class BookRecord
{
  /**
   * The string that holds the book title.
   */ 
  private String title;
  /**
   * The string that holds the author's name.
   */ 
  private String author;
  /**
   * The string that holds the genre.
   */ 
  private String genre;
  /**
   * The string that holds the location of the book.
   */ 
  private String location;
  /**
   * Stores the date the book was borrowed if it is borrowed.
   */ 
  private String borrowDate;
  /**
   * Stores the date the book will be returned if it is borrowed.
   */ 
  private String returnDate;
  /**
   * Keeps track of the number of records.
   */ 
  public static int recNum = 0;
  
  /**
   * This class constructor creates  new instance of BookRecord with 4 String parameters.
   * 
   * @param title The user entered title
   * @param author The user entered author name
   * @param genre The user entered genre
   * @param location The user entered location number
   */
  public BookRecord (String title, String author, String genre, String location, String borrowDate, String returnDate)
  {
    this.title = formatName (title);
    this.author = formatName (author);
    this.genre = genre;
    this.location = location;
    this.borrowDate = borrowDate;
    this.returnDate = returnDate;
    
    recNum ++;
  }
  
  /**
   * This class constructor creates  new instance of BookRecord without any parameters.
   */ 
  public BookRecord ()
  {
    recNum ++;
  }
  
  /**
   * This method sets a new title.
   * 
   * @param newName String the new title to be set.
   */ 
  public void setTitle (String newName)
  {
    title = formatName (newName);
  }
  
  /**
   * This method sets a new author name.
   * 
   * @param newName String the new author name to be set.
   */ 
  public void setAuthor (String newAuthor)
  {
    author = formatName (newAuthor);
  }
  
  /**
   * This method sets a new genre.
   * 
   * @param newName String the genre to be set.
   */ 
  public void setGenre (String newGenre)
  {
    genre = newGenre;
  }
  
  /**
   * This method sets a new location.
   * 
   * @param newName String the location to be set.
   */ 
  public void setLocation (String newLocation)
  {
    location = newLocation;
  }
  
  /**
   * This method sets a new borrow date.
   * 
   * @param newDate String the date to be set.
   */ 
  public void setBorrowDate (String newDate)
  {
    returnDate = newDate;
  }
  
  /**
   * This method sets a new return date.
   * 
   * @param newDate String the date to be set.
   */ 
  public void setReturnDate (String newDate)
  {
    returnDate = newDate;
  }
  
  /**
   * This method returns the current title.
   */ 
  public String getTitle()
  {
    return title;
  }
  
  /**
   * This method returns the current author name.
   */ 
  public String getAuthor()
  {
    return author;
  }
    
  /**
   * This method returns the current genre.
   */ 
  public String getGenre ()
  {
    return genre;
  }
  
  /**
   * This method returns the current location.
   */ 
  public String getLocation ()
  {
    return location;
  }
  
  /**
   * This method returns the current borrow date.
   */ 
  public String getBorrowDate ()
  {
    return borrowDate;
  }
  
  /**
   * This method returns the current return date.
   */ 
  public String getReturnDate ()
  {
    return returnDate;
  }
  
  /**
   * This method formats the inputted name.
   * 
   * @param name String the name to be formatted.
   * @param firstLetter String holds the first letter.
   * @param theRest String holds the rest of the string.
   */ 
  private String formatName (String name)
  {
    if (!(name.equals ("")||name.equals ("null")))
    {
      String firstLetter = Character.toString(name.charAt(0));
      String theRest = name.substring(1, name.length());
      return (firstLetter.toUpperCase() + theRest);
    }
    else
      return (name);
  }
}
